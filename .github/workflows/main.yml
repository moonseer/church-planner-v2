name: Church Planner CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    services:
      # Set up MongoDB service container
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
          cd ../server && npm ci
      
      - name: Check code formatting
        run: |
          npm run format:check || echo "Code formatting issues found"
      
      - name: Lint code
        run: |
          cd client && npm run lint
          cd ../server && npm run lint
      
      - name: Type check
        run: |
          cd client && npm run typecheck
          cd ../server && npm run typecheck
      
      - name: Run tests
        run: |
          cd client && npm test
          cd ../server && npm test
        env:
          MONGO_URI: mongodb://admin:password@localhost:27017/church-planner-test?authSource=admin
          JWT_SECRET: test_jwt_secret_for_ci
          JWT_EXPIRE: 1d
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            client/dist
            server/dist

  # Uncomment when ready to implement deployment
  # deploy-staging:
  #   needs: test-and-build
  #   if: github.ref == 'refs/heads/develop'
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-artifacts
  #     
  #     - name: Deploy to staging
  #       run: echo "Deployment to staging would happen here"
  # 
  # deploy-production:
  #   needs: test-and-build
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-artifacts
  #     
  #     - name: Deploy to production
  #       run: echo "Deployment to production would happen here" 