version: '3.8'

# Root docker-compose file for Church Planner Microservices
# This file includes configuration for all components

# To run in development mode:
# docker-compose -f docker-compose.yml -f infrastructure/docker/docker-compose.dev.yml up

# To run in production mode:
# docker-compose -f docker-compose.yml -f infrastructure/docker/docker-compose.prod.yml up

# Import base configuration
include:
  - infrastructure/docker/docker-compose.yml

# Define frontend service here since it's not part of the backend services
services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - church-planner-network
    depends_on:
      - api-gateway

  # Server Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: church-planner-server
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://admin:password@mongodb:27017/church_planner?authSource=admin
      - JWT_SECRET=your_jwt_secret_here
      - JWT_EXPIRE=30d
      - PORT=8080
    networks:
      - church-planner-network

  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: church-planner-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - church-planner-network

  # MongoDB Express Web UI (optional but helpful for development)
  mongo-express:
    image: mongo-express:latest
    container_name: church-planner-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - church-planner-network

networks:
  church-planner-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local 