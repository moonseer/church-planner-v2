services:
  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: church-planner-prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring-network
      - church-planner-network

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: church-planner-grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3030:3000"  # Using 3030 to avoid conflict with client
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=church-planner-admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      - loki
    networks:
      - monitoring-network
      - church-planner-network

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: church-planner-loki
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    restart: always
    command: -config.file=/etc/loki/config.yml
    networks:
      - monitoring-network

  # Promtail - Log Collector for Loki
  promtail:
    image: grafana/promtail:latest
    container_name: church-planner-promtail
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring-network

  # Portainer - Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: church-planner-portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always
    networks:
      - monitoring-network
      - church-planner-network

  # Node Exporter - Host Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: church-planner-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: always
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring-network

networks:
  monitoring-network:
    driver: bridge
  church-planner-network:
    external: true

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  portainer_data: 